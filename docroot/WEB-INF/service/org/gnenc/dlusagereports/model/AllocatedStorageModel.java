/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.gnenc.dlusagereports.model;

import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the AllocatedStorage service. Represents a row in the &quot;DLUsage_AllocatedStorage&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.gnenc.dlusagereports.model.impl.AllocatedStorageModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.gnenc.dlusagereports.model.impl.AllocatedStorageImpl}.
 * </p>
 *
 * @author Drew A. Blessing
 * @see AllocatedStorage
 * @see org.gnenc.dlusagereports.model.impl.AllocatedStorageImpl
 * @see org.gnenc.dlusagereports.model.impl.AllocatedStorageModelImpl
 * @generated
 */
public interface AllocatedStorageModel extends BaseModel<AllocatedStorage> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a AllocatedStorage model instance should use the {@link AllocatedStorage} interface instead.
	 */

	/**
	 * Returns the primary key of this AllocatedStorage.
	 *
	 * @return the primary key of this AllocatedStorage
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this AllocatedStorage.
	 *
	 * @param primaryKey the primary key of this AllocatedStorage
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this AllocatedStorage.
	 *
	 * @return the ID of this AllocatedStorage
	 */
	public long getId();

	/**
	 * Sets the ID of this AllocatedStorage.
	 *
	 * @param id the ID of this AllocatedStorage
	 */
	public void setId(long id);

	/**
	 * Returns the total bytes of this AllocatedStorage.
	 *
	 * @return the total bytes of this AllocatedStorage
	 */
	public long getTotalBytes();

	/**
	 * Sets the total bytes of this AllocatedStorage.
	 *
	 * @param totalBytes the total bytes of this AllocatedStorage
	 */
	public void setTotalBytes(long totalBytes);

	/**
	 * Returns the modified user ID of this AllocatedStorage.
	 *
	 * @return the modified user ID of this AllocatedStorage
	 */
	public long getModifiedUserId();

	/**
	 * Sets the modified user ID of this AllocatedStorage.
	 *
	 * @param ModifiedUserId the modified user ID of this AllocatedStorage
	 */
	public void setModifiedUserId(long ModifiedUserId);

	/**
	 * Returns the modified user uuid of this AllocatedStorage.
	 *
	 * @return the modified user uuid of this AllocatedStorage
	 * @throws SystemException if a system exception occurred
	 */
	public String getModifiedUserUuid() throws SystemException;

	/**
	 * Sets the modified user uuid of this AllocatedStorage.
	 *
	 * @param ModifiedUserUuid the modified user uuid of this AllocatedStorage
	 */
	public void setModifiedUserUuid(String ModifiedUserUuid);

	/**
	 * Returns the modified date of this AllocatedStorage.
	 *
	 * @return the modified date of this AllocatedStorage
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this AllocatedStorage.
	 *
	 * @param modifiedDate the modified date of this AllocatedStorage
	 */
	public void setModifiedDate(Date modifiedDate);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(AllocatedStorage allocatedStorage);

	public int hashCode();

	public CacheModel<AllocatedStorage> toCacheModel();

	public AllocatedStorage toEscapedModel();

	public String toString();

	public String toXmlString();
}